{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\konra\\\\Documents\\\\GitHub\\\\aniwatch\\\\frontend\\\\src\\\\App.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport './App.css';\nimport axios from 'axios';\nimport AnimeContainer from './components/AnimeContainer';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst baseUrl = `http://localhost:4000`;\n\nfunction App() {\n  _s();\n\n  const year = new Date().getFullYear().toString();\n  const season = '0';\n  const [animeList, setAnimeList] = useState();\n  const [seasonYear, setSeasonYear] = useState(year);\n  const [seasonSelect, setSeasonSelect] = useState(season);\n\n  const fetchData = async () => {\n    if (seasonYear.length == 4) {\n      var _result$data;\n\n      const result = await axios.post(baseUrl + '/api/anime/season/', {\n        offset: \"0\",\n        season: \"4\",\n        year: \"2021\"\n      });\n      setAnimeList((_result$data = result.data) === null || _result$data === void 0 ? void 0 : _result$data.series);\n    }\n\n    ;\n  };\n\n  useEffect(() => {\n    const fetchData = async () => {\n      if (seasonYear.length == 4) {\n        var _result$data2;\n\n        const result = await axios.post(baseUrl + '/api/anime/season/', {\n          offset: \"0\",\n          season: \"4\",\n          year: \"2021\"\n        });\n        setAnimeList((_result$data2 = result.data) === null || _result$data2 === void 0 ? void 0 : _result$data2.series);\n      }\n\n      ;\n    };\n  }, []);\n  console.log(animeList);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App-list\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      className: \"w-48 h-12\",\n      type: \"number\",\n      min: \"1900\",\n      max: \"2099\",\n      onChange: e => setSeasonYear(e.target.value),\n      value: seasonYear\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      onChange: e => setSeasonSelect(e.target.value),\n      value: seasonSelect,\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        children: \"Zima\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        children: \"Wiosna\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        children: \"Lato\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        children: \"Jesie\\u0144\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: fetchData(),\n      children: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AnimeContainer, {\n      series: animeList\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"ewrbep3Mnry5q4xnP/VXREkCWkQ=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/konra/Documents/GitHub/aniwatch/frontend/src/App.tsx"],"names":["React","useEffect","useState","axios","AnimeContainer","baseUrl","App","year","Date","getFullYear","toString","season","animeList","setAnimeList","seasonYear","setSeasonYear","seasonSelect","setSeasonSelect","fetchData","length","result","post","offset","data","series","console","log","e","target","value"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport axios from 'axios';\nimport AnimeContainer from './components/AnimeContainer';\n\nconst baseUrl = `http://localhost:4000`\n \nfunction App() {\n\n  const year = new Date().getFullYear().toString();\n  const season = '0';\n\n  const [animeList, setAnimeList] = useState<any>();\n  const [seasonYear, setSeasonYear] = useState<string>(year);\n  const [seasonSelect, setSeasonSelect] = useState<string>(season);\n\n  const fetchData = async () => {\n    if(seasonYear.length == 4){\n      const result = await axios.post(baseUrl + '/api/anime/season/',{\n        offset: \"0\",\n        season: \"4\",\n        year: \"2021\",\n      });\n      setAnimeList(result.data?.series);\n    };\n  };\n  \n  useEffect(() => {\n    const fetchData = async () => {\n      if(seasonYear.length == 4){\n        const result = await axios.post(baseUrl + '/api/anime/season/',{\n          offset: \"0\",\n          season: \"4\",\n          year: \"2021\",\n        });\n        setAnimeList(result.data?.series);\n      };\n    };\n  }, []);\n\n  console.log(animeList);\n\n  return (\n    <div className='App-list'>\n      <input className=\"w-48 h-12\" type=\"number\" min=\"1900\" max=\"2099\" onChange={e => setSeasonYear(e.target.value)} value={seasonYear} />\n      <select onChange={e => setSeasonSelect(e.target.value)} value={seasonSelect}>\n        <option>Zima</option>\n        <option>Wiosna</option>\n        <option>Lato</option>\n        <option>Jesie≈Ñ</option>\n      </select>\n      <button onClick={fetchData()}>Submit</button>\n      <AnimeContainer series={animeList} />\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}