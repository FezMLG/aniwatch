{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\konra\\\\Documents\\\\GitHub\\\\aniwatch\\\\frontend\\\\src\\\\App.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport './App.css';\nimport axios from 'axios';\nimport AnimeContainer from './components/AnimeContainer';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst baseUrl = `http://localhost:4000`;\n\nfunction App() {\n  _s();\n\n  const year = new Date().getFullYear().toString();\n  const season = '0';\n  const [animeList, setAnimeList] = useState();\n  const [seasonYear, setSeasonYear] = useState(year);\n  const [seasonSelect, setSeasonSelect] = useState(season);\n  useEffect(() => {\n    const fetchData = async () => {\n      var _result$data;\n\n      const result = await axios.post(baseUrl + '/api/anime/season/', {\n        offset: \"0\",\n        season: \"4\",\n        year: \"2021\"\n      });\n      setAnimeList((_result$data = result.data) === null || _result$data === void 0 ? void 0 : _result$data.series);\n    };\n\n    console.log(seasonSelect);\n  }, []);\n  console.log(animeList);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App-list\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      className: \"w-48 h-12\",\n      type: \"number\",\n      min: \"1900\",\n      max: \"2099\",\n      value: year\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      onChange: e => setSeasonSelect(e.target.value),\n      id: \"1\",\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        children: \"Zima\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        children: \"Wiosna\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        children: \"Lato\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        children: \"Jesie\\u0144\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AnimeContainer, {\n      series: animeList\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"ewrbep3Mnry5q4xnP/VXREkCWkQ=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/konra/Documents/GitHub/aniwatch/frontend/src/App.tsx"],"names":["React","useEffect","useState","axios","AnimeContainer","baseUrl","App","year","Date","getFullYear","toString","season","animeList","setAnimeList","seasonYear","setSeasonYear","seasonSelect","setSeasonSelect","fetchData","result","post","offset","data","series","console","log","e","target","value"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AAEA,OAAO,WAAP;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,cAAP,MAA2B,6BAA3B;;AAEA,MAAMC,OAAO,GAAI,uBAAjB;;AAEA,SAASC,GAAT,GAAe;AAAA;;AAEb,QAAMC,IAAI,GAAG,IAAIC,IAAJ,GAAWC,WAAX,GAAyBC,QAAzB,EAAb;AACA,QAAMC,MAAM,GAAG,GAAf;AAEA,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BX,QAAQ,EAA1C;AACA,QAAM,CAACY,UAAD,EAAaC,aAAb,IAA8Bb,QAAQ,CAASK,IAAT,CAA5C;AACA,QAAM,CAACS,YAAD,EAAeC,eAAf,IAAkCf,QAAQ,CAASS,MAAT,CAAhD;AAEAV,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMiB,SAAS,GAAG,YAAY;AAAA;;AAC5B,YAAMC,MAAM,GAAG,MAAMhB,KAAK,CAACiB,IAAN,CAAWf,OAAO,GAAG,oBAArB,EAA0C;AAC7DgB,QAAAA,MAAM,EAAE,GADqD;AAE7DV,QAAAA,MAAM,EAAE,GAFqD;AAG7DJ,QAAAA,IAAI,EAAE;AAHuD,OAA1C,CAArB;AAKAM,MAAAA,YAAY,iBAACM,MAAM,CAACG,IAAR,iDAAC,aAAaC,MAAd,CAAZ;AACD,KAPD;;AAQAC,IAAAA,OAAO,CAACC,GAAR,CAAYT,YAAZ;AACD,GAVQ,EAUN,EAVM,CAAT;AAYAQ,EAAAA,OAAO,CAACC,GAAR,CAAYb,SAAZ;AAEA,sBACE;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA,4BACE;AAAO,MAAA,SAAS,EAAC,WAAjB;AAA6B,MAAA,IAAI,EAAC,QAAlC;AAA2C,MAAA,GAAG,EAAC,MAA/C;AAAsD,MAAA,GAAG,EAAC,MAA1D;AAAiE,MAAA,KAAK,EAAEL;AAAxE;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAQ,MAAA,QAAQ,EAAEmB,CAAC,IAAIT,eAAe,CAACS,CAAC,CAACC,MAAF,CAASC,KAAV,CAAtC;AAAwD,MAAA,EAAE,EAAC,GAA3D;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHF,eAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJF;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,eAQE,QAAC,cAAD;AAAgB,MAAA,MAAM,EAAEhB;AAAxB;AAAA;AAAA;AAAA;AAAA,YARF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAYD;;GAnCQN,G;;KAAAA,G;AAqCT,eAAeA,GAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport axios from 'axios';\nimport AnimeContainer from './components/AnimeContainer';\n\nconst baseUrl = `http://localhost:4000`\n \nfunction App() {\n\n  const year = new Date().getFullYear().toString();\n  const season = '0';\n\n  const [animeList, setAnimeList] = useState<any>();\n  const [seasonYear, setSeasonYear] = useState<string>(year);\n  const [seasonSelect, setSeasonSelect] = useState<string>(season);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const result = await axios.post(baseUrl + '/api/anime/season/',{\n        offset: \"0\",\n        season: \"4\",\n        year: \"2021\",\n      });\n      setAnimeList(result.data?.series);\n    };\n    console.log(seasonSelect);\n  }, []);\n\n  console.log(animeList);\n\n  return (\n    <div className='App-list'>\n      <input className=\"w-48 h-12\" type=\"number\" min=\"1900\" max=\"2099\" value={year}/>\n      <select onChange={e => setSeasonSelect(e.target.value)} id=\"1\">\n        <option>Zima</option>\n        <option>Wiosna</option>\n        <option>Lato</option>\n        <option>Jesie≈Ñ</option>\n      </select>\n      <AnimeContainer series={animeList} />\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}